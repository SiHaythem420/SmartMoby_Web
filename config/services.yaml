# config/services.yaml
parameters:
    # Define your parameters here
    blog_image_directory: '%kernel.project_dir%/public/uploads/blogs'
    app.google_maps.api_key: '%env(GOOGLE_MAPS_API_KEY)%'
    app.weather.api_key: '%env(OPENWEATHER_API_KEY)%'
    infobip.api_url: '%env(INFOBIP_API_URL)%'
    infobip.api_key: '%env(INFOBIP_API_KEY)%'
    infobip.sms_sender: '%env(INFOBIP_SENDER)%'
    infobip.whatsapp_template: '%env(INFOBIP_WHATSAPP_TEMPLATE)%'
    infobip.whatsapp_language: '%env(INFOBIP_WHATSAPP_LANGUAGE)%'

services:
    # Default configuration for all services
    _defaults:
        


        

    
        
    
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            string $apiUrl: '%env(INFOBIP_API_URL)%'
            string $apiKey: '%env(INFOBIP_API_KEY)%'
            string $sender: '%env(INFOBIP_SENDER)%'  # Assurez-vous que $sender est bien lié à l'environnement
            string $template: '%infobip.whatsapp_template%'
            string $language: '%infobip.whatsapp_language%'
    
     # Service pour l'envoi de messages WhatsApp Infobip
    App\Service\InfobipSmsSender:
        arguments:
            $httpClient: '@Symfony\Contracts\HttpClient\HttpClientInterface'
            $apiUrl: '%env(INFOBIP_API_URL)%'
            $apiKey: '%env(INFOBIP_API_KEY)%'
            $sender: '%env(INFOBIP_SENDER)%'
            $template: '%infobip.whatsapp_template%'
            $language: '%infobip.whatsapp_language%'

    # Makes classes in src/ available as services
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # Explicit service definitions
    Symfony\Component\Finder\Finder: ~

    # Image uploader service with parameter injection
    App\Service\ImageUploader:
        arguments:
            $targetDirectory: '%blog_image_directory%'
            $slugger: '@Symfony\Component\String\Slugger\SluggerInterface'





  




 
    

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Google Maps Service
    App\Service\GoogleMapsService:
        public: true
        arguments:
            $apiKey: '%app.google_maps.api_key%'

    App\Service\WeatherService:
        arguments:
            $apiKey: '%env(WEATHER_API_KEY)%'

